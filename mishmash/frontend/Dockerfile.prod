# Build stage
FROM node:16-alpine as builder

# Add build arguments
ARG NODE_ENV
ARG REACT_APP_API_URL

# Set environment variables from args
ENV NODE_ENV=$NODE_ENV \
    REACT_APP_API_URL=$REACT_APP_API_URL

WORKDIR /app

# Add Python and build tools for node-gyp
RUN apk add --no-cache python3 make g++

# Create directories and set permissions
RUN mkdir -p /app/build && \
    chown -R node:node /app && \
    mkdir -p /home/node/.npm && \
    chown -R node:node /home/node/.npm

# Switch to non-root user
USER node

# Install dependencies
COPY --chown=node:node package*.json ./
RUN npm install --legacy-peer-deps

# Debug: List files before source copy
RUN echo "=== Before source copy ===" && \
    ls -la

# Copy source code
COPY --chown=node:node . .

# Debug: List files after source copy
RUN echo "=== After source copy ===" && \
    ls -la && \
    echo "=== Contents of src ===" && \
    ls -la src/

# Debug: Show npm scripts
RUN echo "=== package.json scripts ===" && \
    cat package.json | grep -A 10 '"scripts":'

# Build the production static files
RUN echo "=== Starting build ===" && \
    npm run build && \
    echo "=== After build - contents of /app/build ===" && \
    ls -la /app/build && \
    echo "=== Contents of /app/build/static ===" && \
    ls -la /app/build/static

# Keep container running to maintain volume mount
CMD ["tail", "-f", "/dev/null"]