# Use Python 3.10 slim image
FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DATABASE_NAME=mishmash \
    DATABASE_USER=root \
    DATABASE_HOST=127.0.0.1 \
    DATABASE_PORT=3306 

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    default-libmysqlclient-dev \
    pkg-config \
    cron \
    nano \
    procps \
    bash \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip
RUN pip install --upgrade pip

# Install Python dependencies
COPY requirements.txt .
RUN pip install -r requirements.txt

# Add gunicorn
RUN pip install gunicorn

# Copy project
COPY . .

# Create static and media directories
# Create necessary directories with correct permissions
RUN mkdir -p /app/static /app/media /app/api/migrations /app/backups && \
    chown -R www-data:www-data /app/static /app/media /app/api/migrations /app/backups && \
    chmod -R 755 /app/static /app/media /app/api/migrations /app/backups

# Collect static files
RUN python manage.py collectstatic --noinput

# Ensure cron log file exists and is writable
RUN touch /var/log/cron.log && chmod 777 /var/log/cron.log

# Create a script that will be executed by cron with the proper environment
COPY run_backup.sh /app/run_backup.sh
RUN chmod ugo+x /app/run_backup.sh

# Set up crontab to use the script
RUN echo "* * * * * www-data /app/run_backup.sh" > /etc/crontab

RUN chmod o+x /app
RUN chmod u+rwx /app/backups
RUN chown www-data /app/backups 

EXPOSE 8000

# Create entrypoint script
RUN echo '#!/usr/bin/bash\n\
# Start cron as root\n\
service cron start\n\
\n\
# Switch to www-data and run gunicorn\n\
exec su -s /bin/bash www-data -c "gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 4 mishmash.wsgi:application"\n\
' > /app/entrypoint.sh

RUN chmod +x /app/entrypoint.sh

# Remove the USER directive
# USER www-data

# Use the entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]