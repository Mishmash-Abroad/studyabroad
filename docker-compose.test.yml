
services:
  frontend:
    build: 
      context: ./mishmash/frontend
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
        - REACT_APP_API_URL=https://test-mishmash.colab.duke.edu
    volumes:
      - frontend_build:/app/build
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://test-mishmash.colab.duke.edu
    depends_on:
      - backend

  backend:
    env_file:
      - .env
    build: 
      context: ./mishmash
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - /home/vcm/backups:/app/backups 
    environment:
      - DEBUG=0
      - DJANGO_ALLOWED_HOSTS=localhost,dev-mishmash.colab.duke.edu,mishmash.colab.duke.edu,testserver,test-mishmash.colab.duke.edu
      - DATABASE_NAME=mishmash
      - DATABASE_USER=root
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DJANGO_SUPERUSER_USERNAME=admin_django
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - AES_CIPHER_KEY=${AES_CIPHER_KEY}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_DEFAULT_FROM=${SENDGRID_DEFAULT_FROM}
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations api --noinput &&
             python manage.py makemigrations --noinput &&
             python manage.py migrate api --noinput &&
             python manage.py migrate --noinput && 
             python manage.py add_test_users &&
             python manage.py add_test_programs &&
             python manage.py add_test_applications &&
             python manage.py add_test_announcements &&
             gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 4 mishmash.wsgi:application"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/default.test.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - static_volume:/app/static:ro
      - frontend_build:/app/build:ro
      - media_volume:/app/media:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=mishmash
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
  netdata:
    image: netdata/netdata:edge
    container_name: netdata
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/dbus:/run/dbus:ro
    environment:
      - NETDATA_CLAIM_TOKEN=Witi4VmoGYmI7CIO7aWKA11dhTxUlzdpc6upuFEdpnX_IilZYPQIceKYF4f32nnuLcHVACNfgPjBokgfPSpNg3DMHmMT-9WcpWMtmgQJWq9Lu3v1H23rB35tLSz-4_d3r6Vk2cw
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
      - NETDATA_CLAIM_ROOMS=346ba341-6133-4757-909e-0747200b43f4

volumes:
  mysql_data:
  static_volume:
  media_volume:
  frontend_build:
  nginx_logs:
  netdataconfig:
  netdatalib:
  netdatacache:
