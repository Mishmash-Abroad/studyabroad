error_log /var/log/nginx/error.log debug;
access_log /var/log/nginx/access.log combined;

# Upstream definitions
upstream backend {
    server backend:8000;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name dev-mishmash.colab.duke.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev-mishmash.colab.duke.edu;

    # SSL Certificates (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/dev-mishmash.colab.duke.edu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev-mishmash.colab.duke.edu/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_prefer_server_ciphers off;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    client_max_body_size 100M;

    # Frontend (React)
    root /app/build;
    index index.html;

    # React Static Files
    location /static/ {
        access_log off;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        gzip_static on;
    }

    # React app routes
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "no-store, must-revalidate";
    }

    # Backend API (Django)
    location /api/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
    }

    # Django Admin
    location /admin/ {
        proxy_pass http://backend/admin/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;

        # CSRF and security settings
        proxy_cookie_path / "/; HTTPOnly; Secure";
        proxy_cookie_domain $host dev-mishmash.colab.duke.edu;
    }

    # Django Static Files
    location /django-static/ {
        alias /app/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
        gzip_static on;
        try_files $uri =404;
    }

    # Media Files (Django)
    location /media/ {
        alias /app/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
        gzip_static on;
        try_files $uri =404;
    }
}
